#!/usr/bin/env python

'''
Created on Mar 20, 2012

@author: fabrizio
'''

import sysman.confhandler,sysman.server

import socket,os

serverport = 61874
lsu = '1988010101000000'
localhostname = socket.gethostname()

print 'Starting SYSMAN daemon on server ' + localhostname + ' port ' + str(serverport)

if localhostname == 'Giove':
    PATH = '/home/fabrizio/APPO'
    localhostname = 'BN1'
elif localhostname == 'D03':
    PATH = '/home/frosa/APPO'

confFile =  PATH + os.sep + 'sysmand.xml'
daemon = sysman.server.Server(serverport,confFile)
#
#system1 = sysman.system.System('Ucraina', 'Ucraina Strela\' OPS System', lsu)
#node1 = sysman.node.Node('D01', 'Controller Working Position', lsu)
#node2 = sysman.node.Node('D02', 'Controller Working Position', lsu)
#exe1 = sysman.executable.Executable('E000IKM0-01RFCRHEL3', PATH, 'Kernel Mara Interface 1', lsu)
#exe2 = sysman.executable.Executable('E000IKM0-02RFCRHEL3', PATH, 'Kernel Mara Interface 2', lsu)
#exe3 = sysman.executable.Executable('E000IKM0-03RFCRHEL3', PATH, 'Kernel Mara Interface 3', lsu)
#exe4 = sysman.executable.Executable('E0R1XSD1-01RFCRHEL3', PATH, 'System Messages Dispatcher', lsu)
#exe5 = sysman.executable.Executable('EA20SPV1-01RFCRHEL3', PATH, 'Node Supervisor 1', lsu)
#exe6 = sysman.executable.Executable('EA20DTS1-01RFCRHEL3', PATH, 'DTS', lsu)
#node1.insert_node_exec(exe1)
#node1.insert_node_exec(exe2)
#node1.insert_node_exec(exe3)
#node1.insert_node_exec(exe4)
#node2.insert_node_exec(exe5)
#node2.insert_node_exec(exe6)
#system1.insert_system_node(node1)
#system1.insert_system_node(node2)
#config1 =sysman.confhandler.Configuration()
#config1.add_system(system1)
#config1.save(confFile)

#def load_conf(cf):
#    def start_element(name, attrs):
#        #print 'Start element:', name, attrs
#        if name == 'system':
#            print 'System: ' + attrs['systemname'] + ' last update: ' + attrs['lastupd']
#        elif name == 'node':
#            print '+- Node: ' + attrs['hostname'] + ' (' + attrs['desc'] + ') ' + attrs['lastupd']
#        elif name == 'executable':
#            print '   +- Exec: ' + attrs['execname'] + ' in ' + attrs['path'] +' (' + attrs['desc'] + ') ' + attrs['lastupd']
#    def end_element(name):
#        pass
#        #print 'End element:', name
#    def char_data(data):
#        #print 'Character data:', repr(data)
#        pass
#    config = xml.parsers.expat.ParserCreate()
#    config.StartElementHandler = start_element
#    config.EndElementHandler = end_element
#    config.CharacterDataHandler = char_data
#    config.ParseFile(cf)
#    
#if os.access(confFile, os.F_OK):
#    cf = open(confFile,'r')
#    load_conf(cf)
#else:
#    print 'file non trovato'
#localnode = sysman.node.Node(localhostname)
#print localhostname


#configuration = sysman.confhandler.Configuration(confFile)
#ucraina = configuration.get_system('Ucraina')
#print 'System: ' + ucraina.get_system_name() + ' (' + ucraina.get_system_description() + ')'
#for node in ucraina.get_system_node_list():
#    print '--------------------------------------------------'
#    print '  Node: ' + node.get_node_name() + ' (' + node.get_node_description() + ')'
#    print '    Exec list:'
#    for exe in node.get_node_exec_list():
#        if exe.is_versioned():
#            print '      ' + exe.get_exec_short_version()
#        else:
#            print '      ' + exe.get_exec_short_name() + ' generated from Ing.'
#        print '        ' + exe.get_exec_os_short_version()

#if __name__ == '__main__':
#    pass